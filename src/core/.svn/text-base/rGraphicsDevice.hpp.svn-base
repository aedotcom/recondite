#ifndef R_GRAPHICSDEVICE_HPP
#define R_GRAPHICSDEVICE_HPP

#include <GL/glew.h>

#ifdef WIN32
	#define WIN32_LEAN_AND_MEAN
	#include <windows.h>
#endif

#ifdef __APPLE__
	#include <OpenGL/gl.h>
	#include <OpenGL/glu.h>
#else
	#include <GL/gl.h>
	#include <GL/glu.h>
#endif

#include <cmath>
#include <vector>

#include "rTypes.hpp"
#include "math/rMath2.hpp"
#include "math/rMath3.hpp"

typedef rVector2Array rVertex2Array;
typedef rVector3Array rVertex3Array;
typedef std::vector<unsigned short> rIndexArray;

#define rqtCIRCLE_SEGMENTS  30

#define rqtSPHERE_STACKS 12
#define rqtSPHERE_SEGMENTS 12

#define rqtCONE_SEGMENTS 30

class rGraphicsDevice{
public:
	rGraphicsDevice();
	virtual ~rGraphicsDevice();

	virtual void Init() = 0;
	virtual void Uninit()  = 0;

	virtual void Clear()  = 0;
	virtual int Unproject(const rVector3& v, rVector3& world) = 0;

	virtual void DrawWireRectangle(const rRectangle2& r , const rColor& color) = 0;
	virtual void DrawShadedRectangle(const rRectangle2& r , const rColor& color) = 0;

	virtual void DrawWireCircle(const rCircle2& c , const rColor& color) = 0;
	virtual void DrawShadedCircle(const rCircle2& c , const rColor& color) = 0;

	virtual void DrawLines(const rFloatArray& lines , const rColor& color) = 0;
	virtual void DrawLines3(const rVertex3Array& lines , const rColor& color) = 0;

	virtual void DrawWireTriangle(const rTriangle2& t , const rColor& color) = 0;
	virtual void DrawShadedTriangle(const rTriangle2& t , const rColor& color) = 0;

	virtual void DrawWireBox(const rAlignedBox3& b, const rColor& color) = 0;

	virtual void DrawPoint3(const rVector3& p , const rColor& color) = 0;
	virtual void DrawWireSphere3(const rSphere3& s , const rColor& color) = 0;

	virtual void DrawWireCone3(const rCone3& cone , const rColor& color) = 0;


protected:
	void InitCircle();
	void InitRectangle();
	void InitBox();
	void InitSphere();
	void InitCone();

	void SetRectDrawPoints(const rRectangle2& r);
	void SetCircleDrawPoints(const rCircle2& c);
	void SetBoxDrawPoints(const rAlignedBox3& b);
	void SetSphereDrawPoints(const rSphere3& s);
	void SetConeDrawPoints(const rCone3& cone);


protected:
	rVertex2Array circlePoints;
	rVertex2Array circleDrawPoints;
	rIndexArray wireCircleIndicies;
	rIndexArray shadedCircleIndicies;

	rVertex2Array rectanglePoints;
	rIndexArray wireRectangleIndicies;
	rIndexArray shadedRectangleIndicies;

	rVertex3Array boxPoints;
	rIndexArray wireBoxIndicies;

	rVertex3Array spherePoints;
	rVertex3Array sphereDrawPoints;
	rIndexArray wireSphereIndicies;

	rVertex3Array coneDrawPoints;
	rIndexArray coneIndicies;
};

#endif